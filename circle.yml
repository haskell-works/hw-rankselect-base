version: 2.0
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: quay.io/haskell_works/stack-build-cabal:2018-01-29

    steps:
      - checkout
      - run: git fetch --unshallow || true
      - run: grep '^resolver:' stack.yaml > resolver.txt

      ##### Copying scripts
      - run:
          name: Copying scripts
          command: |
            mkdir -p ~/.local/bin
            cp ./scripts/* ~/.local/bin

      - run:
          name: Query resolver & ghc version
          command: |
            resolver > resolver.version
            ghc-version $(cat resolver.version) >  ghc.version

      ##### Updating cabval package list
      - run:
          name: Updating cabal package list date stamp
          command: date +%F > dot-cabal-cache-date

      - restore_cache:
          keys:
            - dot-cabal-{{ checksum "dot-cabal-cache-date" }}
            - dot-cabal

      - run:
          name: Updating cabal package list
          command: cabal update

      - save_cache:
          key: dot-cabal-{{ checksum "dot-cabal-cache-date" }}
          paths:
            - ~/.cabal
      - save_cache:
          key: dot-cabal
          paths:
            - ~/.cabal

      - restore_cache:
          keys:
            - stack--{{ checksum "ghc.version" }}--{{ .Environment.CACHE_VERSION }}--{{ checksum "resolver.version" }}--{{ checksum "package.yaml" }}--{{ checksum "stack.yaml" }}
            - stack--{{ checksum "ghc.version" }}--{{ .Environment.CACHE_VERSION }}--{{ checksum "resolver.version" }}--{{ checksum "package.yaml" }}
            - stack--{{ checksum "ghc.version" }}--{{ .Environment.CACHE_VERSION }}--{{ checksum "resolver.version" }}--
            - stack--{{ checksum "ghc.version" }}--X

      ##### Fetching latest organisation package versions
      - run:
          name: Fetching latest organisation package versions
          command: |
            fetch
            echo "== stack-ci.yaml =="
            cat stack-ci.yaml

      - save_cache:
          key: dot-stack-{{ checksum "resolver.txt" }}
          paths:
            - ~/.stack

      - restore_cache:
          key: dot-stack-work-{{ checksum "stack.yaml" }}

      - run:
          name: Stack setup
          command: stack setup

      - save_cache:
          key:    stack--{{ checksum "ghc.version" }}--X
          paths:  [~/.stack, ~/project/.stack-work]

      - run:
          name: Building dependencies
          command: stack --stack-yaml stack-ci.yaml build --only-dependencies

      - save_cache:
          key:    stack--{{ checksum "ghc.version" }}--{{ .Environment.CACHE_VERSION }}--{{ checksum "resolver.version" }}--{{ checksum "package.yaml" }}
          paths:  [~/.stack, ~/project/.stack-work]

      - run:
          name: Compiling
          command: stack --stack-yaml stack-ci.yaml build --test --no-run-tests --bench --no-run-benchmarks

      - save_cache:
          key:    stack--{{ checksum "ghc.version" }}--{{ .Environment.CACHE_VERSION }}--{{ checksum "resolver.version" }}--{{ checksum "package.yaml" }}--{{ checksum "stack.yaml" }}
          paths:  [~/.stack, ~/project/.stack-work]

      ##### Running tests
      - run:
          name: Running tests against latest on hackage
          command: stack --stack-yaml stack-ci.yaml test

      - deploy:
          command: |
            if [ "$CIRCLE_PROJECT_USERNAME" == "haskell-works" ]; then
              if [[ "$CIRCLE_BRANCH" == master ]]; then
                when tag autotag
              elif [[ "$CIRCLE_TAG" =~ v.* ]]; then
                publish
              fi
            fi
deployment:
  tagged_builds:
    tag: /v.*/
    commands:
      - echo "Make tags run in 2.0"
